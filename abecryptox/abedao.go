package abecryptox

import (
	"github.com/abesuite/abec/wire"
)

// AbeTxOutputDesc defines the description for Txo generation.
// reviewed on 2023.12.07
type AbeTxOutputDesc struct {
	cryptoAddress []byte // generated by CryptoAddressKeyGen
	value         uint64
}

// NewAbeTxOutDesc constructs a new AbeTxOutputDesc from the input (cryptoAddress []byte, value uint64).
// reviewed on 2023.12.07
func NewAbeTxOutDesc(cryptoAddress []byte, value uint64) *AbeTxOutputDesc {
	return &AbeTxOutputDesc{
		cryptoAddress: cryptoAddress,
		value:         value,
	}
}

//func (abeTxOutputDesc *AbeTxOutputDesc) GetValue() uint64 {
//	return abeTxOutputDesc.value
//}

// AbeTxInputDescByRootSeeds defines the information that will be need to spend a TxoCoin, in TransferTxGen.
// The information consists of Root Seeds and coinDetectorRootKey.
// NOTE: The (Root Seeds, Root Key) should be those used to generate the cryptoAddress.
// NOTE: As cryptoAddress=cryptoScheme+privacyLevel+coinAddress, these coinXXXRootSeeds is purely randomness, without containing cryptoScheme or privacyLevel,
// this is because, generating these (Root Seeds, Root Key) is the responsibility of the caller of abecrypto.
type AbeTxInputDescByRootSeeds struct {
	// ringId        *wire.RingId  // txoRing identifier
	txoRing                     *wire.TxoRing // complete TxoRing information
	sidx                        uint8         // spend which one
	cryptoAddress               []byte        // address, generated by CryptoAddressKeyGen
	coinSpendKeyRootSeed        []byte        // spendkey, generated by CryptoAddressKeyGen
	coinSerialNumberKeyRootSeed []byte        //  serial-number secret key, generated by CryptoAddressKeyGen
	coinValueKeyRootSeed        []byte        //  view secret key, generated by CryptoAddressKeyGen
	coinDetectorRootKey         []byte        //	a symmetric key for coin-detection
	value                       uint64
}

// AbeTxInputDesc defines the data that are need to spend a TxoCoin, in TransferTxGen.
// reviewed on 2023.12.21
// todo: review
type AbeTxInputDescByKeys struct {
	// ringId        *wire.RingId  // txoRing identifier
	txoRing           *wire.TxoRing // complete TxoRing information
	sidx              uint8         // spend which one
	cryptoAddress     []byte        // address, generated by CryptoAddressKeyGen
	cryptoSpsk        []byte        // spend secret key, generated by CryptoAddressKeyGen
	cryptoSnsk        []byte        //  serial-number secret key, generated by CryptoAddressKeyGen
	cryptoVsk         []byte        //  view secret key, generated by CryptoAddressKeyGen
	cryptoDetectorKey []byte        //	a symmetric key for coin-detection
	value             uint64
}

// NewAbeTxInputDescByRootSeeds constructs a new NewAbeTxInputDescByRootSeeds.
// todo: review
func NewAbeTxInputDescByRootSeeds( //ringId *wire.RingId,
	txoRing *wire.TxoRing,
	sidx uint8, cryptoAddress []byte, coinSpendKeyRootSeed []byte, coinSerialNumberKeyRootSeed []byte, coinValueKeyRootSeed []byte, coinDetectorRootKey []byte, value uint64) *AbeTxInputDescByRootSeeds {
	return &AbeTxInputDescByRootSeeds{
		//ringId:        ringId,
		txoRing:                     txoRing,
		sidx:                        sidx,
		cryptoAddress:               cryptoAddress,
		coinSpendKeyRootSeed:        coinSpendKeyRootSeed,
		coinSerialNumberKeyRootSeed: coinSerialNumberKeyRootSeed,
		coinValueKeyRootSeed:        coinValueKeyRootSeed,
		coinDetectorRootKey:         coinDetectorRootKey,
		value:                       value,
	}
}

// NewAbeTxInputDescByKeys constructs a new NewAbeTxInputDescByKeys.
// reviewed on 2023.12.21
func NewAbeTxInputDescByKeys( //ringId *wire.RingId,
	txoRing *wire.TxoRing,
	sidx uint8, cryptoAddress []byte, cryptoSpsk []byte, cryptoSnsk []byte, cryptoVsk []byte, cryptoDetectorKey []byte, value uint64) *AbeTxInputDescByKeys {
	return &AbeTxInputDescByKeys{
		//ringId:        ringId,
		txoRing:           txoRing,
		sidx:              sidx,
		cryptoAddress:     cryptoAddress,
		cryptoSpsk:        cryptoSpsk,
		cryptoSnsk:        cryptoSnsk,
		cryptoVsk:         cryptoVsk,
		cryptoDetectorKey: cryptoDetectorKey,
		value:             value,
	}
}

// AbeTxInDetail defines the data describing a consumed TxoCoin in TransferTx, which will be used in TransferTxVerify
// reviewed on 2023.12.21
type AbeTxInDetail struct {
	ringId       wire.RingId // txoRing identifier
	txoList      []*wire.TxOutAbe
	serialNumber []byte
}

// NewAbeTxInDetail constructs a new NewAbeTxInDetail.
// reviewed on 2023.12.21
func NewAbeTxInDetail(ringId wire.RingId, txoList []*wire.TxOutAbe, serialNumber []byte) *AbeTxInDetail {
	return &AbeTxInDetail{
		ringId:       ringId,
		txoList:      txoList,
		serialNumber: serialNumber,
	}
}

//	data structures for abec side	end
